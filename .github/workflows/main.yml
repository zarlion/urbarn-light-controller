name: Build Urbarn APK (Fast)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Manual trigger
  
jobs:
  build-apk:
    runs-on: ubuntu-22.04
    timeout-minutes: 45
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Cache system dependencies
      uses: actions/cache@v4
      with:
        path: |
          /var/cache/apt
          /var/lib/apt
        key: ${{ runner.os }}-apt-${{ hashFiles('**/buildozer.spec') }}
    
    - name: Install system dependencies (fast)
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
          build-essential git zlib1g-dev python3-dev \
          libffi-dev libssl-dev libbz2-dev libreadline-dev \
          libsqlite3-dev libncurses5-dev libgdbm-dev \
          openjdk-17-jdk unzip
        
        # Set JAVA_HOME
        echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
    
    - name: Cache Buildozer and dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.buildozer
          ~/.gradle
          ~/.android
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}-v2
        restore-keys: |
          ${{ runner.os }}-buildozer-
    
    - name: Install Buildozer and Python deps
      run: |
        pip install --upgrade pip setuptools wheel
        pip install buildozer cython kivy
        pip install -r requirements.txt
    
    - name: Accept Android SDK licenses
      run: |
        mkdir -p ~/.android
        echo 'count=0' > ~/.android/repositories.cfg
        yes | buildozer android release || echo "Licenses accepted"
    
    - name: Build APK
      run: |
        buildozer android debug
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: urbarn-light-controller-apk
        path: bin/*.apk
        retention-days: 30
    
    - name: Upload build logs (on failure)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: .buildozer/android/platform/build/*/logs/
        retention-days: 7
        
    - name: Show APK info
      if: success()
      run: |
        echo "ðŸŽ‰ APK built successfully!"
        ls -la bin/
        echo "ðŸ“± APK ready for download from Actions artifacts"
